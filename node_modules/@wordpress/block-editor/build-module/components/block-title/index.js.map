{"version":3,"sources":["@wordpress/block-editor/src/components/block-title/index.js"],"names":["truncate","useSelect","getBlockType","__experimentalGetBlockLabel","getBlockLabel","useBlockDisplayInformation","BlockTitle","clientId","select","getBlockName","getBlockAttributes","attributes","name","blockInformation","blockType","label","title","length"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,QAAzB;AAEA;AACA;AACA;;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SACCC,YADD,EAECC,2BAA2B,IAAIC,aAFhC,QAGO,mBAHP;AAKA;AACA;AACA;;AACA,OAAOC,0BAAP,MAAuC,kCAAvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,UAAT,OAAoC;AAAA,MAAbC,QAAa,QAAbA,QAAa;;AAAA,mBACrBN,SAAS,CACrC,UAAEO,MAAF,EAAc;AACb,QAAK,CAAED,QAAP,EAAkB;AACjB,aAAO,EAAP;AACA;;AAHY,kBAIgCC,MAAM,CAClD,mBADkD,CAJtC;AAAA,QAILC,YAJK,WAILA,YAJK;AAAA,QAISC,kBAJT,WAISA,kBAJT;;AAOb,WAAO;AACNC,MAAAA,UAAU,EAAED,kBAAkB,CAAEH,QAAF,CADxB;AAENK,MAAAA,IAAI,EAAEH,YAAY,CAAEF,QAAF;AAFZ,KAAP;AAIA,GAZoC,EAarC,CAAEA,QAAF,CAbqC,CADY;AAAA,MAC1CI,UAD0C,cAC1CA,UAD0C;AAAA,MAC9BC,IAD8B,cAC9BA,IAD8B;;AAiBlD,MAAMC,gBAAgB,GAAGR,0BAA0B,CAAEE,QAAF,CAAnD;AACA,MAAK,CAAEK,IAAF,IAAU,CAAEC,gBAAjB,EAAoC,OAAO,IAAP;AACpC,MAAMC,SAAS,GAAGZ,YAAY,CAAEU,IAAF,CAA9B;AACA,MAAMG,KAAK,GAAGX,aAAa,CAAEU,SAAF,EAAaH,UAAb,CAA3B,CApBkD,CAqBlD;AACA;AACA;AACA;;AACA,MAAKI,KAAK,KAAKD,SAAS,CAACE,KAAzB,EAAiC;AAChC,qBAAWF,SAAS,CAACE,KAArB,eAAiChB,QAAQ,CAAEe,KAAF,EAAS;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAT,CAAzC;AACA;;AACD,SAAOJ,gBAAgB,CAACG,KAAxB;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { truncate } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport {\n\tgetBlockType,\n\t__experimentalGetBlockLabel as getBlockLabel,\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport useBlockDisplayInformation from '../use-block-display-information';\n\n/**\n * Renders the block's configured title as a string, or empty if the title\n * cannot be determined.\n *\n * @example\n *\n * ```jsx\n * <BlockTitle clientId=\"afd1cb17-2c08-4e7a-91be-007ba7ddc3a1\" />\n * ```\n *\n * @param {Object} props\n * @param {string} props.clientId Client ID of block.\n *\n * @return {?string} Block title.\n */\nexport default function BlockTitle( { clientId } ) {\n\tconst { attributes, name } = useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! clientId ) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t\tconst { getBlockName, getBlockAttributes } = select(\n\t\t\t\t'core/block-editor'\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tattributes: getBlockAttributes( clientId ),\n\t\t\t\tname: getBlockName( clientId ),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst blockInformation = useBlockDisplayInformation( clientId );\n\tif ( ! name || ! blockInformation ) return null;\n\tconst blockType = getBlockType( name );\n\tconst label = getBlockLabel( blockType, attributes );\n\t// Label will fallback to the title if no label is defined for the\n\t// current label context. We do not want \"Paragraph: Paragraph\".\n\t// If label is defined we prioritize it over possible possible\n\t// block variation match title.\n\tif ( label !== blockType.title ) {\n\t\treturn `${ blockType.title }: ${ truncate( label, { length: 15 } ) }`;\n\t}\n\treturn blockInformation.title;\n}\n"]}