{"version":3,"sources":["@wordpress/block-library/src/group/edit.native.js"],"names":["isWider","alignmentHelpers","isFullWidth","GroupEdit","attributes","hasInnerBlocks","isSelected","isLastInnerBlockSelected","getStylesFromColorScheme","mergedStyle","align","resizeObserver","sizes","width","screenWidth","Math","floor","Dimensions","get","isEqualWidth","renderAppender","styles","groupAppender","wideGroupAppender","groupPlaceholder","groupPlaceholderDark","marginVerticalDense","marginHorizontalNone","innerBlocks","backgroundColor","hasBackgroundAppender","select","clientId","getBlock","getBlockIndex","hasSelectedInnerBlock","getBlockRootClientId","getSelectedBlockClientId","getBlockAttributes","block","length","isInnerBlockSelected","selectedBlockClientId","totalInnerBlocks","blockIndex","parentId","parentBlockAlignment","withPreferredColorScheme"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View, Dimensions } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { withSelect } from '@wordpress/data';\nimport {\n\tcompose,\n\twithPreferredColorScheme,\n\tuseResizeObserver,\n} from '@wordpress/compose';\nimport { InnerBlocks } from '@wordpress/block-editor';\nimport { useCallback } from '@wordpress/element';\nimport { alignmentHelpers } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport styles from './editor.scss';\n\nconst { isWider, isFullWidth } = alignmentHelpers;\n\nfunction GroupEdit( {\n\tattributes,\n\thasInnerBlocks,\n\tisSelected,\n\tisLastInnerBlockSelected,\n\tgetStylesFromColorScheme,\n\tmergedStyle,\n} ) {\n\tconst { align } = attributes;\n\tconst [ resizeObserver, sizes ] = useResizeObserver();\n\tconst { width } = sizes || { width: 0 };\n\tconst screenWidth = Math.floor( Dimensions.get( 'window' ).width );\n\tconst isEqualWidth = width === screenWidth;\n\n\tconst renderAppender = useCallback(\n\t\t() => (\n\t\t\t<View\n\t\t\t\tstyle={\n\t\t\t\t\t( isWider( screenWidth, 'mobile' ) ||\n\t\t\t\t\t\tisEqualWidth ||\n\t\t\t\t\t\tisFullWidth( align ) ) &&\n\t\t\t\t\t( hasInnerBlocks\n\t\t\t\t\t\t? styles.groupAppender\n\t\t\t\t\t\t: styles.wideGroupAppender )\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<InnerBlocks.ButtonBlockAppender />\n\t\t\t</View>\n\t\t),\n\t\t[ align, hasInnerBlocks, width ]\n\t);\n\n\tif ( ! isSelected && ! hasInnerBlocks ) {\n\t\treturn (\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\tgetStylesFromColorScheme(\n\t\t\t\t\t\tstyles.groupPlaceholder,\n\t\t\t\t\t\tstyles.groupPlaceholderDark\n\t\t\t\t\t),\n\t\t\t\t\t! hasInnerBlocks && {\n\t\t\t\t\t\t...styles.marginVerticalDense,\n\t\t\t\t\t\t...styles.marginHorizontalNone,\n\t\t\t\t\t},\n\t\t\t\t] }\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<View\n\t\t\tstyle={ [\n\t\t\t\tisSelected && hasInnerBlocks && styles.innerBlocks,\n\t\t\t\tmergedStyle,\n\t\t\t\tisSelected &&\n\t\t\t\t\thasInnerBlocks &&\n\t\t\t\t\tmergedStyle?.backgroundColor &&\n\t\t\t\t\tstyles.hasBackgroundAppender,\n\t\t\t\tisLastInnerBlockSelected &&\n\t\t\t\t\tmergedStyle?.backgroundColor &&\n\t\t\t\t\tstyles.isLastInnerBlockSelected,\n\t\t\t] }\n\t\t>\n\t\t\t{ resizeObserver }\n\t\t\t<InnerBlocks\n\t\t\t\trenderAppender={ isSelected && renderAppender }\n\t\t\t\tparentWidth={ width }\n\t\t\t/>\n\t\t</View>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst {\n\t\t\tgetBlock,\n\t\t\tgetBlockIndex,\n\t\t\thasSelectedInnerBlock,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetBlockAttributes,\n\t\t} = select( 'core/block-editor' );\n\n\t\tconst block = getBlock( clientId );\n\t\tconst hasInnerBlocks = !! ( block && block.innerBlocks.length );\n\t\tconst isInnerBlockSelected =\n\t\t\thasInnerBlocks && hasSelectedInnerBlock( clientId, true );\n\t\tlet isLastInnerBlockSelected = false;\n\n\t\tif ( isInnerBlockSelected ) {\n\t\t\tconst { innerBlocks } = block;\n\t\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\t\tconst totalInnerBlocks = innerBlocks.length - 1;\n\t\t\tconst blockIndex = getBlockIndex( selectedBlockClientId, clientId );\n\t\t\tisLastInnerBlockSelected = totalInnerBlocks === blockIndex;\n\t\t}\n\n\t\tconst parentId = getBlockRootClientId( clientId );\n\t\tconst parentBlockAlignment = getBlockAttributes( parentId )?.align;\n\n\t\treturn {\n\t\t\thasInnerBlocks,\n\t\t\tisLastInnerBlockSelected,\n\t\t\tparentBlockAlignment,\n\t\t};\n\t} ),\n\twithPreferredColorScheme,\n] )( GroupEdit );\n"]}