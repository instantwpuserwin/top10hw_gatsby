"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = QueryToolbar;

var _element = require("@wordpress/element");

var _components = require("@wordpress/components");

var _i18n = require("@wordpress/i18n");

var _icons = require("@wordpress/icons");

/**
 * WordPress dependencies
 */
function QueryToolbar(_ref) {
  var _ref$attributes = _ref.attributes,
      query = _ref$attributes.query,
      layout = _ref$attributes.layout,
      setQuery = _ref.setQuery,
      setLayout = _ref.setLayout;
  var layoutControls = [{
    icon: _icons.list,
    title: (0, _i18n.__)('List view'),
    onClick: function onClick() {
      return setLayout({
        type: 'list'
      });
    },
    isActive: (layout === null || layout === void 0 ? void 0 : layout.type) === 'list'
  }, {
    icon: _icons.grid,
    title: (0, _i18n.__)('Grid view'),
    onClick: function onClick() {
      return setLayout({
        type: 'flex',
        columns: (layout === null || layout === void 0 ? void 0 : layout.columns) || 3
      });
    },
    isActive: (layout === null || layout === void 0 ? void 0 : layout.type) === 'flex'
  }];
  return (0, _element.createElement)(_element.Fragment, null, (0, _element.createElement)(_components.ToolbarGroup, null, (0, _element.createElement)(_components.Dropdown, {
    contentClassName: "block-library-query-toolbar__popover",
    renderToggle: function renderToggle(_ref2) {
      var onToggle = _ref2.onToggle;
      return (0, _element.createElement)(_components.ToolbarButton, {
        icon: _icons.settings,
        label: (0, _i18n.__)('Display settings'),
        onClick: onToggle
      });
    },
    renderContent: function renderContent() {
      return (0, _element.createElement)(_element.Fragment, null, (0, _element.createElement)(_components.BaseControl, null, (0, _element.createElement)(_components.__experimentalNumberControl, {
        __unstableInputWidth: "60px",
        label: (0, _i18n.__)('Items per Page'),
        labelPosition: "edge",
        min: 1,
        max: 100,
        onChange: function onChange(value) {
          var _value;

          return setQuery({
            perPage: (_value = +value) !== null && _value !== void 0 ? _value : -1
          });
        },
        step: "1",
        value: query.perPage,
        isDragEnabled: false
      })), (0, _element.createElement)(_components.BaseControl, null, (0, _element.createElement)(_components.__experimentalNumberControl, {
        __unstableInputWidth: "60px",
        label: (0, _i18n.__)('Offset'),
        labelPosition: "edge",
        min: 0,
        max: 100,
        onChange: function onChange(value) {
          return setQuery({
            offset: +value
          });
        },
        step: "1",
        value: query.offset,
        isDragEnabled: false
      })), (0, _element.createElement)(_components.BaseControl, null, (0, _element.createElement)(_components.RangeControl, {
        label: (0, _i18n.__)('Number of Pages'),
        min: 1,
        allowReset: true,
        value: query.pages,
        onChange: function onChange(value) {
          return setQuery({
            pages: value !== null && value !== void 0 ? value : -1
          });
        }
      })));
    }
  })), (0, _element.createElement)(_components.ToolbarGroup, {
    controls: layoutControls
  }));
}
//# sourceMappingURL=query-toolbar.js.map