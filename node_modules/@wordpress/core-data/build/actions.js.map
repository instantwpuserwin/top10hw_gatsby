{"version":3,"sources":["@wordpress/core-data/src/actions.js"],"names":["deleteEntityRecord","editEntityRecord","undo","redo","saveEntityRecord","saveEditedEntityRecord","receiveUserQuery","queryID","users","type","receiveCurrentUser","currentUser","addEntities","entities","receiveEntityRecords","kind","name","records","query","invalidateCache","edits","map","record","status","title","action","receiveCurrentTheme","currentTheme","receiveThemeSupports","themeSupports","receiveEmbedPreview","url","preview","recordId","entity","deletedRecord","exclusive","lock","path","baseURL","method","error","options","controls","select","Error","transientEdits","mergedEdits","editedRecord","edit","Object","keys","reduce","acc","key","recordValue","editedRecordValue","value","undefined","meta","undoIgnore","undoEdit","isUndo","redoEdit","isRedo","__unstableCreateUndoLevel","isAutosave","entityIdKey","DEFAULT_ENTITY_KEY","entries","evaluatedValue","persistedRecord","currentUserId","id","autosavePost","data","includes","updatedRecord","newRecord","receiveAutosaves","__unstablePrePersist","receiveUploadPermissions","hasUploadPermissions","isAllowed","receiveUserPermission","postId","autosaves"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { castArray, get, isEqual, find } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * WordPress dependencies\n */\nimport { controls } from '@wordpress/data';\nimport { apiFetch } from '@wordpress/data-controls';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { receiveItems, removeItems, receiveQueriedItems } from './queried-data';\nimport { getKindEntities, DEFAULT_ENTITY_KEY } from './entities';\nimport {\n\t__unstableAcquireStoreLock,\n\t__unstableReleaseStoreLock,\n} from './locks';\n\n/**\n * Returns an action object used in signalling that authors have been received.\n *\n * @param {string}       queryID Query ID.\n * @param {Array|Object} users   Users received.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserQuery( queryID, users ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_QUERY',\n\t\tusers: castArray( users ),\n\t\tqueryID,\n\t};\n}\n\n/**\n * Returns an action used in signalling that the current user has been received.\n *\n * @param {Object} currentUser Current user object.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentUser( currentUser ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_USER',\n\t\tcurrentUser,\n\t};\n}\n\n/**\n * Returns an action object used in adding new entities.\n *\n * @param {Array} entities  Entities received.\n *\n * @return {Object} Action object.\n */\nexport function addEntities( entities ) {\n\treturn {\n\t\ttype: 'ADD_ENTITIES',\n\t\tentities,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been received.\n *\n * @param {string}       kind            Kind of the received entity.\n * @param {string}       name            Name of the received entity.\n * @param {Array|Object} records         Records received.\n * @param {?Object}      query           Query Object.\n * @param {?boolean}     invalidateCache Should invalidate query caches.\n * @param {?Object}      edits           Edits to reset.\n * @return {Object} Action object.\n */\nexport function receiveEntityRecords(\n\tkind,\n\tname,\n\trecords,\n\tquery,\n\tinvalidateCache = false,\n\tedits\n) {\n\t// Auto drafts should not have titles, but some plugins rely on them so we can't filter this\n\t// on the server.\n\tif ( kind === 'postType' ) {\n\t\trecords = castArray( records ).map( ( record ) =>\n\t\t\trecord.status === 'auto-draft' ? { ...record, title: '' } : record\n\t\t);\n\t}\n\tlet action;\n\tif ( query ) {\n\t\taction = receiveQueriedItems( records, query, edits );\n\t} else {\n\t\taction = receiveItems( records, edits );\n\t}\n\n\treturn {\n\t\t...action,\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current theme has been received.\n *\n * @param {Object} currentTheme The current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentTheme( currentTheme ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_THEME',\n\t\tcurrentTheme,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the index has been received.\n *\n * @param {Object} themeSupports Theme support for the current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeSupports( themeSupports ) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_SUPPORTS',\n\t\tthemeSupports,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the preview data for\n * a given URl has been received.\n *\n * @param {string}  url     URL to preview the embed for.\n * @param {*}       preview Preview data.\n *\n * @return {Object} Action object.\n */\nexport function receiveEmbedPreview( url, preview ) {\n\treturn {\n\t\ttype: 'RECEIVE_EMBED_PREVIEW',\n\t\turl,\n\t\tpreview,\n\t};\n}\n\n/**\n * Action triggered to delete an entity record.\n *\n * @param {string}  kind              Kind of the deleted entity.\n * @param {string}  name              Name of the deleted entity.\n * @param {string}  recordId          Record ID of the deleted entity.\n * @param {?Object} query             Special query parameters for the DELETE API call.\n */\nexport function* deleteEntityRecord( kind, name, recordId, query ) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tlet error;\n\tlet deletedRecord = false;\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\n\tconst lock = yield* __unstableAcquireStoreLock(\n\t\t'core',\n\t\t[ 'entities', 'data', kind, name, recordId ],\n\t\t{ exclusive: true }\n\t);\n\ttry {\n\t\tyield {\n\t\t\ttype: 'DELETE_ENTITY_RECORD_START',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t};\n\n\t\ttry {\n\t\t\tlet path = `${ entity.baseURL }/${ recordId }`;\n\n\t\t\tif ( query ) {\n\t\t\t\tpath = addQueryArgs( path, query );\n\t\t\t}\n\n\t\t\tdeletedRecord = yield apiFetch( {\n\t\t\t\tpath,\n\t\t\t\tmethod: 'DELETE',\n\t\t\t} );\n\n\t\t\tyield removeItems( kind, name, recordId, true );\n\t\t} catch ( _error ) {\n\t\t\terror = _error;\n\t\t}\n\n\t\tyield {\n\t\t\ttype: 'DELETE_ENTITY_RECORD_FINISH',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\terror,\n\t\t};\n\n\t\treturn deletedRecord;\n\t} finally {\n\t\tyield* __unstableReleaseStoreLock( lock );\n\t}\n}\n\n/**\n * Returns an action object that triggers an\n * edit to an entity record.\n *\n * @param {string} kind     Kind of the edited entity record.\n * @param {string} name     Name of the edited entity record.\n * @param {number} recordId Record ID of the edited entity record.\n * @param {Object} edits    The edits.\n * @param {Object} options  Options for the edit.\n * @param {boolean} options.undoIgnore Whether to ignore the edit in undo history or not.\n *\n * @return {Object} Action object.\n */\nexport function* editEntityRecord( kind, name, recordId, edits, options = {} ) {\n\tconst entity = yield controls.select( 'core', 'getEntity', kind, name );\n\tif ( ! entity ) {\n\t\tthrow new Error(\n\t\t\t`The entity being edited (${ kind }, ${ name }) does not have a loaded config.`\n\t\t);\n\t}\n\tconst { transientEdits = {}, mergedEdits = {} } = entity;\n\tconst record = yield controls.select(\n\t\t'core',\n\t\t'getRawEntityRecord',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst editedRecord = yield controls.select(\n\t\t'core',\n\t\t'getEditedEntityRecord',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\n\tconst edit = {\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\t// Clear edits when they are equal to their persisted counterparts\n\t\t// so that the property is not considered dirty.\n\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\tconst recordValue = record[ key ];\n\t\t\tconst editedRecordValue = editedRecord[ key ];\n\t\t\tconst value = mergedEdits[ key ]\n\t\t\t\t? { ...editedRecordValue, ...edits[ key ] }\n\t\t\t\t: edits[ key ];\n\t\t\tacc[ key ] = isEqual( recordValue, value ) ? undefined : value;\n\t\t\treturn acc;\n\t\t}, {} ),\n\t\ttransientEdits,\n\t};\n\treturn {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...edit,\n\t\tmeta: {\n\t\t\tundo: ! options.undoIgnore && {\n\t\t\t\t...edit,\n\t\t\t\t// Send the current values for things like the first undo stack entry.\n\t\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\t\tacc[ key ] = editedRecord[ key ];\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} ),\n\t\t\t},\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to undo the last edit to\n * an entity record, if any.\n */\nexport function* undo() {\n\tconst undoEdit = yield controls.select( 'core', 'getUndoEdit' );\n\tif ( ! undoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...undoEdit,\n\t\tmeta: {\n\t\t\tisUndo: true,\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to redo the last undoed\n * edit to an entity record, if any.\n */\nexport function* redo() {\n\tconst redoEdit = yield controls.select( 'core', 'getRedoEdit' );\n\tif ( ! redoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...redoEdit,\n\t\tmeta: {\n\t\t\tisRedo: true,\n\t\t},\n\t};\n}\n\n/**\n * Forces the creation of a new undo level.\n *\n * @return {Object} Action object.\n */\nexport function __unstableCreateUndoLevel() {\n\treturn { type: 'CREATE_UNDO_LEVEL' };\n}\n\n/**\n * Action triggered to save an entity record.\n *\n * @param {string}  kind                       Kind of the received entity.\n * @param {string}  name                       Name of the received entity.\n * @param {Object}  record                     Record to be saved.\n * @param {Object}  options                    Saving options.\n * @param {boolean} [options.isAutosave=false] Whether this is an autosave.\n */\nexport function* saveEntityRecord(\n\tkind,\n\tname,\n\trecord,\n\t{ isAutosave = false } = { isAutosave: false }\n) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\tconst entityIdKey = entity.key || DEFAULT_ENTITY_KEY;\n\tconst recordId = record[ entityIdKey ];\n\n\tconst lock = yield* __unstableAcquireStoreLock(\n\t\t'core',\n\t\t[ 'entities', 'data', kind, name, recordId || uuid() ],\n\t\t{ exclusive: true }\n\t);\n\ttry {\n\t\t// Evaluate optimized edits.\n\t\t// (Function edits that should be evaluated on save to avoid expensive computations on every edit.)\n\t\tfor ( const [ key, value ] of Object.entries( record ) ) {\n\t\t\tif ( typeof value === 'function' ) {\n\t\t\t\tconst evaluatedValue = value(\n\t\t\t\t\tyield controls.select(\n\t\t\t\t\t\t'core',\n\t\t\t\t\t\t'getEditedEntityRecord',\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\trecordId\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tyield editEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId,\n\t\t\t\t\t{\n\t\t\t\t\t\t[ key ]: evaluatedValue,\n\t\t\t\t\t},\n\t\t\t\t\t{ undoIgnore: true }\n\t\t\t\t);\n\t\t\t\trecord[ key ] = evaluatedValue;\n\t\t\t}\n\t\t}\n\n\t\tyield {\n\t\t\ttype: 'SAVE_ENTITY_RECORD_START',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\tisAutosave,\n\t\t};\n\t\tlet updatedRecord;\n\t\tlet error;\n\t\ttry {\n\t\t\tconst path = `${ entity.baseURL }${\n\t\t\t\trecordId ? '/' + recordId : ''\n\t\t\t}`;\n\t\t\tconst persistedRecord = yield controls.select(\n\t\t\t\t'core',\n\t\t\t\t'getRawEntityRecord',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId\n\t\t\t);\n\n\t\t\tif ( isAutosave ) {\n\t\t\t\t// Most of this autosave logic is very specific to posts.\n\t\t\t\t// This is fine for now as it is the only supported autosave,\n\t\t\t\t// but ideally this should all be handled in the back end,\n\t\t\t\t// so the client just sends and receives objects.\n\t\t\t\tconst currentUser = yield controls.select(\n\t\t\t\t\t'core',\n\t\t\t\t\t'getCurrentUser'\n\t\t\t\t);\n\t\t\t\tconst currentUserId = currentUser ? currentUser.id : undefined;\n\t\t\t\tconst autosavePost = yield controls.select(\n\t\t\t\t\t'core',\n\t\t\t\t\t'getAutosave',\n\t\t\t\t\tpersistedRecord.type,\n\t\t\t\t\tpersistedRecord.id,\n\t\t\t\t\tcurrentUserId\n\t\t\t\t);\n\t\t\t\t// Autosaves need all expected fields to be present.\n\t\t\t\t// So we fallback to the previous autosave and then\n\t\t\t\t// to the actual persisted entity if the edits don't\n\t\t\t\t// have a value.\n\t\t\t\tlet data = { ...persistedRecord, ...autosavePost, ...record };\n\t\t\t\tdata = Object.keys( data ).reduce(\n\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t[ 'title', 'excerpt', 'content' ].includes( key )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\t\tacc[ key ] = get( data[ key ], 'raw', data[ key ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tstatus:\n\t\t\t\t\t\t\tdata.status === 'auto-draft'\n\t\t\t\t\t\t\t\t? 'draft'\n\t\t\t\t\t\t\t\t: data.status,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tupdatedRecord = yield apiFetch( {\n\t\t\t\t\tpath: `${ path }/autosaves`,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tdata,\n\t\t\t\t} );\n\t\t\t\t// An autosave may be processed by the server as a regular save\n\t\t\t\t// when its update is requested by the author and the post had\n\t\t\t\t// draft or auto-draft status.\n\t\t\t\tif ( persistedRecord.id === updatedRecord.id ) {\n\t\t\t\t\tlet newRecord = {\n\t\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t\t...data,\n\t\t\t\t\t\t...updatedRecord,\n\t\t\t\t\t};\n\t\t\t\t\tnewRecord = Object.keys( newRecord ).reduce(\n\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\t// These properties are persisted in autosaves.\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t[ 'title', 'excerpt', 'content' ].includes(\n\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\t\t\tacc[ key ] = get(\n\t\t\t\t\t\t\t\t\tnewRecord[ key ],\n\t\t\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\t\t\tnewRecord[ key ]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if ( key === 'status' ) {\n\t\t\t\t\t\t\t\t// Status is only persisted in autosaves when going from\n\t\t\t\t\t\t\t\t// \"auto-draft\" to \"draft\".\n\t\t\t\t\t\t\t\tacc[ key ] =\n\t\t\t\t\t\t\t\t\tpersistedRecord.status === 'auto-draft' &&\n\t\t\t\t\t\t\t\t\tnewRecord.status === 'draft'\n\t\t\t\t\t\t\t\t\t\t? newRecord.status\n\t\t\t\t\t\t\t\t\t\t: persistedRecord.status;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// These properties are not persisted in autosaves.\n\t\t\t\t\t\t\t\tacc[ key ] = get(\n\t\t\t\t\t\t\t\t\tpersistedRecord[ key ],\n\t\t\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\t\t\tpersistedRecord[ key ]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{}\n\t\t\t\t\t);\n\t\t\t\t\tyield receiveEntityRecords(\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tnewRecord,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tyield receiveAutosaves( persistedRecord.id, updatedRecord );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet edits = record;\n\t\t\t\tif ( entity.__unstablePrePersist ) {\n\t\t\t\t\tedits = {\n\t\t\t\t\t\t...edits,\n\t\t\t\t\t\t...entity.__unstablePrePersist(\n\t\t\t\t\t\t\tpersistedRecord,\n\t\t\t\t\t\t\tedits\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tupdatedRecord = yield apiFetch( {\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod: recordId ? 'PUT' : 'POST',\n\t\t\t\t\tdata: edits,\n\t\t\t\t} );\n\t\t\t\tyield receiveEntityRecords(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\tupdatedRecord,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\tedits\n\t\t\t\t);\n\t\t\t}\n\t\t} catch ( _error ) {\n\t\t\terror = _error;\n\t\t}\n\t\tyield {\n\t\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\terror,\n\t\t\tisAutosave,\n\t\t};\n\n\t\treturn updatedRecord;\n\t} finally {\n\t\tyield* __unstableReleaseStoreLock( lock );\n\t}\n}\n\n/**\n * Action triggered to save an entity record's edits.\n *\n * @param {string} kind     Kind of the entity.\n * @param {string} name     Name of the entity.\n * @param {Object} recordId ID of the record.\n * @param {Object} options  Saving options.\n */\nexport function* saveEditedEntityRecord( kind, name, recordId, options ) {\n\tif (\n\t\t! ( yield controls.select(\n\t\t\t'core',\n\t\t\t'hasEditsForEntityRecord',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t) )\n\t) {\n\t\treturn;\n\t}\n\tconst edits = yield controls.select(\n\t\t'core',\n\t\t'getEntityRecordNonTransientEdits',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst record = { id: recordId, ...edits };\n\tyield* saveEntityRecord( kind, name, record, options );\n}\n\n/**\n * Returns an action object used in signalling that Upload permissions have been received.\n *\n * @param {boolean} hasUploadPermissions Does the user have permission to upload files?\n *\n * @return {Object} Action object.\n */\nexport function receiveUploadPermissions( hasUploadPermissions ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey: 'create/media',\n\t\tisAllowed: hasUploadPermissions,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource.\n *\n * @param {string}  key       A key that represents the action and REST resource.\n * @param {boolean} isAllowed Whether or not the user can perform the action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermission( key, isAllowed ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey,\n\t\tisAllowed,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the autosaves for a\n * post have been received.\n *\n * @param {number}       postId    The id of the post that is parent to the autosave.\n * @param {Array|Object} autosaves An array of autosaves or singular autosave object.\n *\n * @return {Object} Action object.\n */\nexport function receiveAutosaves( postId, autosaves ) {\n\treturn {\n\t\ttype: 'RECEIVE_AUTOSAVES',\n\t\tpostId,\n\t\tautosaves: castArray( autosaves ),\n\t};\n}\n"]}